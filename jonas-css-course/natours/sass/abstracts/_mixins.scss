@mixin clearfix {
  // create an after element that will add the height that has been removed by float layout
  &::after {
    content: '';
    display: table;
    // clear both left and right floats
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERIES MANAGER
/*
  RANGES            DEVICE              MEDIA Q.
  0 - 600px:        Phone               max-width
  600 - 900px:      Tablet portrait     max-width
  900 - 1200px:     Tablet landscape    max-width
  1200 - 1800px:    Normal Styles       max-width
  1800 + :          Big desktops        min-width

  
  $breakpoints arguments
  - phone
  - tab-port
  - tab-land
  - big-desktop

  // from the big media queries to the small ones, because for the small queries, larger ones also applies, if we specify them in later in code, that will be applies
  // in mobile-first, first add the lower widths, then add the larger widths

  ORDER: Base + typography > general layout + grid > page layout > components
*/
@mixin respond($breakpoint) {
  // 1em or 1rem is always equal to the font-size that comes from the browser, (only in media queries)
  // "rems" in media q. are failed in some browsers, so "ems" are the best options
  // default browser-font is 16px, so divide the width by 16
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      // 600/16
      // allows to pass the block of code into the mixin
      @content;
    }
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      // 900/16
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      // 1200/16
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      // 1800/16
      @content;
    }
  }
}
